name: CI/CD Pipeline

on:
  push:
    branches:
      - main # Or your deployment branch, e.g., 'master'
  pull_request:
    branches:
      - main # Or your main development branch

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22' # Updated to match your project's Node.js version

      - name: Install dependencies
        run: npm install
        working-directory: workspace # Corrected working directory based on your project structure

      - name: Install ts-node for Jest
        run: npm install ts-node
        working-directory: workspace # Corrected working directory based on your project structure
      
      - name: Run tests
        run: npm run test
        working-directory: workspace # Corrected working directory based on your project structure

  deploy:
    name: Deploy to Firebase
    runs-on: ubuntu-latest
    needs: test # This job will only run if the 'test' job passes
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' # Only deploy on push to main branch

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22' 
      - name: Install dependencies
        run: npm install
        working-directory: workspace # Corrected working directory based on your project structure
      
      - name: Install ts-node for Jest
        run: npm install ts-node
        working-directory: workspace # Corrected working directory based on your project structure

      - name: Build project
        run: npm run build # Or your specific build command
        working-directory: workspace # Corrected working directory based on your project structure
        # Pass Firebase environment variables to the build process
        env:
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}


      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0 # Use the official Firebase Hosting GitHub Action
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}' # GitHub's automatically provided token
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_WEDDINGBETS }}' # Your Firebase service account secret
          projectId: weddingbets-35d91 # Your Firebase Project ID
          channelId: live # Deploy to the 'live' channel (your main site)
          # You can add other options here if needed, e.g., target, entryPoint
